loadstring([[
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

-- Defaults
local defaultWalkSpeed = 16
local defaultJumpPower = 50
local savedWalkSpeed = defaultWalkSpeed
local savedJumpPower = defaultJumpPower

-- Destroy old GUI if exists
if player:FindFirstChild("PlayerGui"):FindFirstChild("SheaButterHub") then
    player.PlayerGui.SheaButterHub:Destroy()
end

-- Create GUI
local gui = Instance.new("ScreenGui")
gui.Name = "SheaButterHub"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

-- Helper: Rounded corners
local function roundify(obj, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 12)
    corner.Parent = obj
end

-- Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 350, 0, 260)
frame.Position = UDim2.new(0.35, 0, 0.3, 0)
frame.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
frame.Active = true
frame.Draggable = true
frame.Parent = gui
roundify(frame, 15)

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 35)
title.BackgroundColor3 = Color3.fromRGB(20, 20, 40)
title.TextColor3 = Color3.fromRGB(0, 170, 255)
title.Text = "Shea Butter Hub"
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.Parent = frame
roundify(title, 12)

-- Function to make slider
local function createSlider(parent, labelText, posY, minValue, maxValue, defaultValue, callback)
    local label = Instance.new("TextLabel")
    label.Position = UDim2.new(0, 10, 0, posY)
    label.Size = UDim2.new(0, 330, 0, 20)
    label.BackgroundTransparency = 1
    label.Text = labelText .. ": " .. defaultValue
    label.TextColor3 = Color3.fromRGB(200, 200, 255)
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Font = Enum.Font.GothamMedium
    label.TextSize = 16
    label.Parent = parent

    local sliderBack = Instance.new("Frame")
    sliderBack.Position = UDim2.new(0, 10, 0, posY + 25)
    sliderBack.Size = UDim2.new(0, 330, 0, 12)
    sliderBack.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
    sliderBack.BorderSizePixel = 0
    sliderBack.Parent = parent
    roundify(sliderBack, 6)

    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new((defaultValue - minValue) / (maxValue - minValue), 0, 1, 0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(0, 140, 255)
    sliderFill.BorderSizePixel = 0
    sliderFill.Parent = sliderBack
    roundify(sliderFill, 6)

    local dragging = false
    local function updateSlider(x)
        local relX = math.clamp((x - sliderBack.AbsolutePosition.X) / sliderBack.AbsoluteSize.X, 0, 1)
        sliderFill.Size = UDim2.new(relX, 0, 1, 0)
        local value = math.floor(minValue + (maxValue - minValue) * relX)
        label.Text = labelText .. ": " .. value
        callback(value)
    end

    sliderBack.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            frame.Active = false
            updateSlider(input.Position.X)
        end
    end)

    sliderBack.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
            frame.Active = true
        end
    end)

    UIS.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            updateSlider(input.Position.X)
        end
    end)

    return function(newVal)
        local relX = (newVal - minValue) / (maxValue - minValue)
        sliderFill.Size = UDim2.new(relX, 0, 1, 0)
        label.Text = labelText .. ": " .. newVal
    end
end

-- Reset button
local resetBtn = Instance.new("TextButton")
resetBtn.Size = UDim2.new(0, 150, 0, 35)
resetBtn.Position = UDim2.new(0.25, 0, 1, -45)
resetBtn.BackgroundColor3 = Color3.fromRGB(0, 110, 200)
resetBtn.Text = "Reset Defaults"
resetBtn.TextColor3 = Color3.new(1,1,1)
resetBtn.Font = Enum.Font.GothamBold
resetBtn.TextSize = 16
resetBtn.Parent = frame
roundify(resetBtn, 10)

-- Character setup
local walkReset, jumpReset
local function applyStats(char)
    local humanoid = char:WaitForChild("Humanoid")
    humanoid.UseJumpPower = true
    humanoid.WalkSpeed = savedWalkSpeed
    humanoid.JumpPower = savedJumpPower
end

local function setupChar(char)
    applyStats(char)

    if not walkReset then
        walkReset = createSlider(frame, "WalkSpeed", 50, 5, 200, savedWalkSpeed, function(val)
            savedWalkSpeed = val
        end)
    end

    if not jumpReset then
        jumpReset = createSlider(frame, "JumpPower", 120, 25, 200, savedJumpPower, function(val)
            savedJumpPower = val
        end)
    end

    resetBtn.MouseButton1Click:Connect(function()
        savedWalkSpeed = defaultWalkSpeed
        savedJumpPower = defaultJumpPower
        if walkReset then walkReset(savedWalkSpeed) end
        if jumpReset then jumpReset(savedJumpPower) end
    end)
end

if player.Character then
    setupChar(player.Character)
end
player.CharacterAdded:Connect(setupChar)

-- Constant enforcement loop
RunService.Heartbeat:Connect(function()
    local char = player.Character
    if char and char:FindFirstChild("Humanoid") then
        local humanoid = char.Humanoid
        humanoid.UseJumpPower = true
        if humanoid.WalkSpeed ~= savedWalkSpeed then
            humanoid.WalkSpeed = savedWalkSpeed
        end
        if humanoid.JumpPower ~= savedJumpPower then
            humanoid.JumpPower = savedJumpPower
        end
    end
end)

-- Toggle GUI with LeftAlt
UIS.InputBegan:Connect(function(input, gpe)
    if not gpe and input.KeyCode == Enum.KeyCode.LeftAlt then
        frame.Visible = not frame.Visible
    end
end)
]])()
